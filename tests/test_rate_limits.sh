#!/bin/bash

# –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–æ–≤ API
# API –∫–ª—é—á: 026b26ac7a206c51a216b3280042cda5178710912da68ae696a713970034dd5f

API_KEY="026b26ac7a206c51a216b3280042cda5178710912da68ae696a713970034dd5f"
BASE_URL="http://localhost:8095"

echo "üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –õ–ò–ú–ò–¢–û–í API"
echo "=========================================="
echo "API –∫–ª—é—á: $API_KEY"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
make_request() {
    local method=$1
    local endpoint=$2
    local data=$3
    
    local url="$BASE_URL$endpoint"
    local headers=(
        "Authorization: Bearer $API_KEY"
        "Content-Type: application/json"
    )
    
    local curl_cmd="curl -s -w '\nHTTP_STATUS:%{http_code}\n' -X $method"
    
    for header in "${headers[@]}"; do
        curl_cmd="$curl_cmd -H '$header'"
    done
    
    if [ ! -z "$data" ]; then
        curl_cmd="$curl_cmd -d '$data'"
    fi
    
    curl_cmd="$curl_cmd '$url'"
    
    local response=$(eval $curl_cmd)
    local http_status=$(echo "$response" | grep "HTTP_STATUS:" | cut -d: -f2)
    local body=$(echo "$response" | grep -v "HTTP_STATUS:")
    
    echo "$http_status"
}

# –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
echo "üìã 1. –ë–ê–ó–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ê"
echo "--------------------------------"

status=$(make_request "GET" "/api/v1/products")
echo "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: HTTP $status"

if [ "$status" = "200" ]; then
    echo "‚úÖ –ü–†–û–ô–î–ï–ù"
else
    echo "‚ùå –ü–†–û–í–ê–õ–ï–ù"
fi

echo ""

# –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω—É—Ç–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤
echo "‚è±Ô∏è  2. –ü–†–û–í–ï–†–ö–ê –ú–ò–ù–£–¢–ù–´–• –õ–ò–ú–ò–¢–û–í"
echo "--------------------------------"

endpoints=(
    "/api/v1/products"
    "/api/v1/offers"
    "/api/v1/orders"
    "/api/v1/warehouses"
)

for endpoint in "${endpoints[@]}"; do
    status=$(make_request "GET" "$endpoint")
    echo "GET $endpoint: HTTP $status"
    
    if [ "$status" = "200" ]; then
        echo "‚úÖ –ü–†–û–ô–î–ï–ù"
    elif [ "$status" = "429" ]; then
        echo "‚ö†Ô∏è  –õ–ò–ú–ò–¢ –ü–†–ï–í–´–®–ï–ù"
    else
        echo "‚ùå –ü–†–û–í–ê–õ–ï–ù"
    fi
    
    sleep 0.1
done

echo ""

# –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–Ω–µ–≤–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤
echo "üìÖ 3. –ü–†–û–í–ï–†–ö–ê –î–ù–ï–í–ù–´–• –õ–ò–ú–ò–¢–û–í"
echo "--------------------------------"

daily_endpoints=(
    "/api/v1/offers?filter=all"
    "/api/v1/offers/public"
)

for endpoint in "${daily_endpoints[@]}"; do
    status=$(make_request "GET" "$endpoint")
    echo "GET $endpoint: HTTP $status"
    
    if [ "$status" = "200" ]; then
        echo "‚úÖ –ü–†–û–ô–î–ï–ù"
    elif [ "$status" = "429" ]; then
        echo "‚ö†Ô∏è  –î–ù–ï–í–ù–û–ô –õ–ò–ú–ò–¢ –ü–†–ï–í–´–®–ï–ù"
    else
        echo "‚ùå –ü–†–û–í–ê–õ–ï–ù"
    fi
    
    sleep 0.1
done

echo ""

# –¢–µ—Å—Ç 4: –°—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç
echo "üí• 4. –°–¢–†–ï–°–°-–¢–ï–°–¢ –õ–ò–ú–ò–¢–û–í"
echo "--------------------------------"

success_count=0
limit_count=0
error_count=0

echo "–û—Ç–ø—Ä–∞–≤–∫–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤..."

for i in {1..20}; do
    status=$(make_request "GET" "/api/v1/products")
    
    if [ "$status" = "200" ]; then
        ((success_count++))
    elif [ "$status" = "429" ]; then
        ((limit_count++))
    else
        ((error_count++))
    fi
    
    if [ $((i % 5)) -eq 0 ]; then
        echo "–ó–∞–ø—Ä–æ—Å $i: –£—Å–ø–µ—à–Ω–æ: $success_count, –õ–∏–º–∏—Ç: $limit_count, –û—à–∏–±–∫–∏: $error_count"
    fi
    
    sleep 0.05
done

echo ""
echo "üìä –ò–¢–û–ì–ò –°–¢–†–ï–°–°-–¢–ï–°–¢–ê:"
echo "–£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: $success_count"
echo "–ó–∞–ø—Ä–æ—Å–æ–≤ —Å –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ–º –ª–∏–º–∏—Ç–∞: $limit_count"
echo "–û—à–∏–±–æ–∫: $error_count"

echo ""
echo "‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –õ–ò–ú–ò–¢–û–í –ó–ê–í–ï–†–®–ï–ù–û"
echo "==========================================" 