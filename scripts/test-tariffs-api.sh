#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API —Ç–∞—Ä–∏—Ñ–æ–≤
# –§–∞–π–ª: scripts/test-tariffs-api.sh

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_BASE_URL="http://localhost:8080/api"
ADMIN_API_KEY="f428fbc16a97b9e2a55717bd34e97537ec34cb8c04a5f32eeb4e88c9ee998a53"
TEST_API_KEY="test_api_key_1"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
make_request() {
    local method=$1
    local url=$2
    local data=$3
    local api_key=$4
    
    local headers="Content-Type: application/json"
    if [ -n "$api_key" ]; then
        headers="$headers"$'\n'"X-API-Key: $api_key"
    fi
    
    if [ -n "$data" ]; then
        curl -s -X "$method" "$url" \
            -H "$headers" \
            -d "$data"
    else
        curl -s -X "$method" "$url" \
            -H "$headers"
    fi
}

# –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
test_api_availability() {
    log_info "–¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API"
    
    response=$(make_request "GET" "$API_BASE_URL/../" "")
    
    if echo "$response" | grep -q "success"; then
        log_success "API –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        log_error "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        return 1
    fi
}

# –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–∞—Ä–∏—Ñ–æ–≤
test_list_tariffs() {
    log_info "–¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–∞—Ä–∏—Ñ–æ–≤"
    
    response=$(make_request "GET" "$API_BASE_URL/tariffs" "" "")
    
    if echo "$response" | grep -q "success.*true"; then
        log_success "–°–ø–∏—Å–æ–∫ —Ç–∞—Ä–∏—Ñ–æ–≤ –ø–æ–ª—É—á–µ–Ω"
        echo "$response" | jq '.' 2>/dev/null || echo "$response"
    else
        log_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–∞—Ä–∏—Ñ–æ–≤"
        echo "$response"
        return 1
    fi
}

# –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞ –ø–æ ID
test_get_tariff() {
    log_info "–¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞ –ø–æ ID"
    
    response=$(make_request "GET" "$API_BASE_URL/tariffs/1" "" "")
    
    if echo "$response" | grep -q "success.*true"; then
        log_success "–¢–∞—Ä–∏—Ñ –ø–æ–ª—É—á–µ–Ω"
        echo "$response" | jq '.' 2>/dev/null || echo "$response"
    else
        log_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞"
        echo "$response"
        return 1
    fi
}

# –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞
test_create_tariff() {
    log_info "–¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞"
    
    local new_tariff='{
        "name": "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ",
        "description": "–¢–∞—Ä–∏—Ñ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
        "minute_limit": 1500,
        "day_limit": 15000,
        "is_active": true
    }'
    
    response=$(make_request "POST" "$API_BASE_URL/tariffs" "$new_tariff" "$ADMIN_API_KEY")
    
    if echo "$response" | grep -q "success.*true"; then
        log_success "–¢–∞—Ä–∏—Ñ —Å–æ–∑–¥–∞–Ω"
        echo "$response" | jq '.' 2>/dev/null || echo "$response"
    else
        log_error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞"
        echo "$response"
        return 1
    fi
}

# –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–∞—Ä–∏—Ñ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
test_get_user_tariff() {
    log_info "–¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–∞—Ä–∏—Ñ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    
    response=$(make_request "GET" "$API_BASE_URL/tariffs/user/1" "" "$ADMIN_API_KEY")
    
    if echo "$response" | grep -q "success.*true"; then
        log_success "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞—Ä–∏—Ñ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω–∞"
        echo "$response" | jq '.' 2>/dev/null || echo "$response"
    else
        log_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–∞—Ä–∏—Ñ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        echo "$response"
        return 1
    fi
}

# –¢–µ—Å—Ç 6: –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
test_change_user_tariff() {
    log_info "–¢–µ—Å—Ç 6: –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    
    local change_request='{
        "user_id": 1,
        "tariff_id": 2
    }'
    
    response=$(make_request "PUT" "$API_BASE_URL/tariffs/user/change" "$change_request" "$ADMIN_API_KEY")
    
    if echo "$response" | grep -q "success.*true"; then
        log_success "–¢–∞—Ä–∏—Ñ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑–º–µ–Ω–µ–Ω"
        echo "$response" | jq '.' 2>/dev/null || echo "$response"
    else
        log_error "–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        echo "$response"
        return 1
    fi
}

# –¢–µ—Å—Ç 7: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–∞—Ä–∏—Ñ–æ–≤
test_get_tariff_stats() {
    log_info "–¢–µ—Å—Ç 7: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–∞—Ä–∏—Ñ–æ–≤"
    
    response=$(make_request "GET" "$API_BASE_URL/tariffs/stats" "" "$ADMIN_API_KEY")
    
    if echo "$response" | grep -q "success.*true"; then
        log_success "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∞—Ä–∏—Ñ–æ–≤ –ø–æ–ª—É—á–µ–Ω–∞"
        echo "$response" | jq '.' 2>/dev/null || echo "$response"
    else
        log_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–∞—Ä–∏—Ñ–æ–≤"
        echo "$response"
        return 1
    fi
}

# –¢–µ—Å—Ç 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ rate limiting —Å –Ω–æ–≤—ã–º–∏ –ª–∏–º–∏—Ç–∞–º–∏
test_rate_limiting() {
    log_info "–¢–µ—Å—Ç 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ rate limiting —Å –Ω–æ–≤—ã–º–∏ –ª–∏–º–∏—Ç–∞–º–∏"
    
    # –î–µ–ª–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–æ–≤
    for i in {1..5}; do
        response=$(make_request "GET" "$API_BASE_URL/tariffs/my" "" "$TEST_API_KEY")
        log_info "–ó–∞–ø—Ä–æ—Å $i: $(echo "$response" | grep -o '"success":[^,]*' || echo "–æ—à–∏–±–∫–∞")"
        sleep 1
    done
}

# –¢–µ—Å—Ç 9: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞
test_update_tariff() {
    log_info "–¢–µ—Å—Ç 9: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞"
    
    local update_data='{
        "minute_limit": 2000,
        "day_limit": 20000
    }'
    
    response=$(make_request "PUT" "$API_BASE_URL/tariffs/1" "$update_data" "$ADMIN_API_KEY")
    
    if echo "$response" | grep -q "success.*true"; then
        log_success "–¢–∞—Ä–∏—Ñ –æ–±–Ω–æ–≤–ª–µ–Ω"
        echo "$response" | jq '.' 2>/dev/null || echo "$response"
    else
        log_error "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞"
        echo "$response"
        return 1
    fi
}

# –¢–µ—Å—Ç 10: –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞
test_delete_tariff() {
    log_info "–¢–µ—Å—Ç 10: –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞"
    
    # –°–Ω–∞—á–∞–ª–∞ –Ω–∞–π–¥–µ–º ID —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞
    response=$(make_request "GET" "$API_BASE_URL/tariffs" "" "$ADMIN_API_KEY")
    
    # –ò—â–µ–º —Ç–∞—Ä–∏—Ñ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ"
    local test_tariff_id=$(echo "$response" | grep -o '"id":[0-9]*' | head -1 | grep -o '[0-9]*')
    
    if [ -n "$test_tariff_id" ]; then
        response=$(make_request "DELETE" "$API_BASE_URL/tariffs/$test_tariff_id" "" "$ADMIN_API_KEY")
        
        if echo "$response" | grep -q "success.*true"; then
            log_success "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ —É–¥–∞–ª–µ–Ω"
        else
            log_warning "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞"
            echo "$response"
        fi
    else
        log_warning "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log_info "–ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Ç–∞—Ä–∏—Ñ–æ–≤..."
    
    local tests_passed=0
    local tests_failed=0
    
    # –°–ø–∏—Å–æ–∫ —Ç–µ—Å—Ç–æ–≤
    tests=(
        "test_api_availability"
        "test_list_tariffs"
        "test_get_tariff"
        "test_create_tariff"
        "test_get_user_tariff"
        "test_change_user_tariff"
        "test_get_tariff_stats"
        "test_rate_limiting"
        "test_update_tariff"
        "test_delete_tariff"
    )
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç—ã
    for test in "${tests[@]}"; do
        echo ""
        if $test; then
            ((tests_passed++))
        else
            ((tests_failed++))
        fi
    done
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    echo ""
    log_info "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
    log_success "–ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: $tests_passed"
    if [ $tests_failed -gt 0 ]; then
        log_error "–ü—Ä–æ–≤–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: $tests_failed"
    else
        log_success "–ü—Ä–æ–≤–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: $tests_failed"
    fi
    
    if [ $tests_failed -eq 0 ]; then
        log_success "–í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! üéâ"
    else
        log_warning "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ."
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    if ! command -v curl &> /dev/null; then
        log_error "curl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    if ! command -v jq &> /dev/null; then
        log_warning "jq –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. JSON –≤—ã–≤–æ–¥ –±—É–¥–µ—Ç –Ω–µ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º."
    fi
}

# –ó–∞–ø—É—Å–∫
check_dependencies
main "$@"
