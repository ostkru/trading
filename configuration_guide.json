{
  "configuration_guide": {
    "title": "PortalData API - Руководство по конфигурации",
    "version": "1.0.0",
    "environment": {
      "development": {
        "description": "Настройки для локальной разработки",
        "config_file": "config.yaml",
        "database": {
          "type": "MySQL",
          "host": "localhost",
          "port": 3306,
          "name": "portaldata_dev",
          "user": "dev",
          "password": "DevPass123!"
        },
        "redis": {
          "host": "localhost",
          "port": 6379,
          "password": "",
          "db": 0
        },
        "server": {
          "port": 8095,
          "host": "0.0.0.0",
          "debug": true
        },
        "jwt": {
          "secret": "dev-secret-key-change-in-production",
          "expiration": "24h",
          "refresh_expiration": "168h"
        },
        "rate_limiting": {
          "enabled": true,
          "requests_per_minute": 60,
          "requests_per_hour": 1000,
          "requests_per_day": 10000
        }
      },
      "production": {
        "description": "Настройки для продакшена",
        "config_file": "config.yaml",
        "database": {
          "type": "PostgreSQL",
          "host": "production-db-host",
          "port": 5432,
          "name": "portaldata_prod",
          "user": "prod_user",
          "password": "secure_password"
        },
        "redis": {
          "host": "production-redis-host",
          "port": 6379,
          "password": "redis_password",
          "db": 0
        },
        "server": {
          "port": 8095,
          "host": "0.0.0.0",
          "debug": false
        },
        "jwt": {
          "secret": "very-secure-production-secret-key",
          "expiration": "24h",
          "refresh_expiration": "168h"
        },
        "rate_limiting": {
          "enabled": true,
          "requests_per_minute": 30,
          "requests_per_hour": 500,
          "requests_per_day": 5000
        }
      }
    },
    "config_structure": {
      "database": {
        "type": "string (mysql/postgresql)",
        "host": "string",
        "port": "integer",
        "name": "string",
        "user": "string",
        "password": "string",
        "ssl_mode": "string (disable/require/verify-ca/verify-full)",
        "max_open_conns": "integer",
        "max_idle_conns": "integer",
        "conn_max_lifetime": "duration"
      },
      "redis": {
        "host": "string",
        "port": "integer",
        "password": "string",
        "db": "integer",
        "pool_size": "integer"
      },
      "server": {
        "port": "integer",
        "host": "string",
        "debug": "boolean",
        "cors": {
          "allowed_origins": "array of strings",
          "allowed_methods": "array of strings",
          "allowed_headers": "array of strings"
        }
      },
      "jwt": {
        "secret": "string",
        "expiration": "duration",
        "refresh_expiration": "duration"
      },
      "rate_limiting": {
        "enabled": "boolean",
        "requests_per_minute": "integer",
        "requests_per_hour": "integer",
        "requests_per_day": "integer"
      },
      "logging": {
        "level": "string (debug/info/warn/error)",
        "format": "string (json/text)",
        "output": "string (stdout/file)"
      }
    },
    "environment_variables": {
      "DATABASE_URL": "Полная строка подключения к БД",
      "REDIS_URL": "Полная строка подключения к Redis",
      "JWT_SECRET": "Секретный ключ для JWT",
      "API_PORT": "Порт для API сервера",
      "LOG_LEVEL": "Уровень логирования",
      "ENVIRONMENT": "Окружение (development/production)"
    },
    "database_setup": {
      "mysql": {
        "installation": {
          "ubuntu": "sudo apt-get install mysql-server",
          "centos": "sudo yum install mysql-server",
          "docker": "docker run --name mysql -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=portaldata -p 3306:3306 -d mysql:8.0"
        },
        "configuration": {
          "create_database": "CREATE DATABASE portaldata_dev;",
          "create_user": "CREATE USER 'dev'@'localhost' IDENTIFIED BY 'DevPass123!';",
          "grant_privileges": "GRANT ALL PRIVILEGES ON portaldata_dev.* TO 'dev'@'localhost';",
          "flush_privileges": "FLUSH PRIVILEGES;"
        }
      },
      "postgresql": {
        "installation": {
          "ubuntu": "sudo apt-get install postgresql postgresql-contrib",
          "centos": "sudo yum install postgresql postgresql-server",
          "docker": "docker run --name postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=portaldata -p 5432:5432 -d postgres:13"
        },
        "configuration": {
          "create_database": "CREATE DATABASE portaldata_dev;",
          "create_user": "CREATE USER dev WITH PASSWORD 'DevPass123!';",
          "grant_privileges": "GRANT ALL PRIVILEGES ON DATABASE portaldata_dev TO dev;"
        }
      }
    },
    "redis_setup": {
      "installation": {
        "ubuntu": "sudo apt-get install redis-server",
        "centos": "sudo yum install redis",
        "docker": "docker run --name redis -p 6379:6379 -d redis:6-alpine"
      },
      "configuration": {
        "bind": "127.0.0.1",
        "port": 6379,
        "maxmemory": "256mb",
        "maxmemory_policy": "allkeys-lru"
      }
    },
    "security": {
      "jwt_secret": {
        "description": "Секретный ключ для подписи JWT токенов",
        "generation": "openssl rand -base64 32",
        "requirements": [
          "Минимум 32 символа",
          "Случайные символы",
          "Хранить в безопасном месте"
        ]
      },
      "database": {
        "password_requirements": [
          "Минимум 8 символов",
          "Содержать буквы и цифры",
          "Не использовать простые пароли"
        ],
        "ssl": {
          "production": "Обязательно использовать SSL",
          "development": "Можно отключить для локальной разработки"
        }
      },
      "rate_limiting": {
        "purpose": "Защита от DDoS атак и злоупотреблений",
        "configuration": {
          "requests_per_minute": "Количество запросов в минуту",
          "requests_per_hour": "Количество запросов в час",
          "requests_per_day": "Количество запросов в день"
        }
      }
    },
    "monitoring": {
      "logs": {
        "access_log": {
          "location": "server.log",
          "format": "JSON",
          "rotation": "Ежедневно"
        },
        "error_log": {
          "location": "app_8095.log",
          "format": "JSON",
          "rotation": "Ежедневно"
        },
        "database_log": {
          "location": "app_8095_mysql.log",
          "format": "JSON",
          "rotation": "Ежедневно"
        }
      },
      "metrics": {
        "response_time": "Среднее время ответа API",
        "error_rate": "Процент ошибок",
        "request_rate": "Количество запросов в секунду",
        "database_connections": "Количество активных соединений с БД"
      },
      "alerts": {
        "high_error_rate": {
          "condition": "error_rate > 5%",
          "action": "Уведомление администратора"
        },
        "slow_response": {
          "condition": "response_time > 2s",
          "action": "Уведомление администратора"
        },
        "database_issues": {
          "condition": "database_connections > 80%",
          "action": "Уведомление администратора"
        }
      }
    },
    "deployment": {
      "docker": {
        "dockerfile": {
          "base_image": "golang:1.21-alpine",
          "build_stages": [
            "builder stage для компиляции",
            "runtime stage для запуска"
          ]
        },
        "docker_compose": {
          "services": [
            "api - основное приложение",
            "mysql - база данных",
            "redis - кэш и rate limiting"
          ]
        }
      },
      "systemd": {
        "service_file": "portaldata-api.service",
        "location": "/etc/systemd/system/",
        "commands": [
          "sudo systemctl enable portaldata-api",
          "sudo systemctl start portaldata-api",
          "sudo systemctl status portaldata-api"
        ]
      },
      "nginx": {
        "reverse_proxy": {
          "location": "/etc/nginx/sites-available/portaldata-api",
          "ssl": "Обязательно для production",
          "load_balancing": "Опционально для высокой нагрузки"
        }
      }
    },
    "troubleshooting": {
      "common_issues": [
        {
          "issue": "Ошибка подключения к БД",
          "symptoms": ["Connection refused", "Access denied"],
          "solutions": [
            "Проверить, что БД запущена",
            "Проверить настройки подключения",
            "Проверить права доступа пользователя"
          ]
        },
        {
          "issue": "Ошибка JWT токена",
          "symptoms": ["Invalid token", "Token expired"],
          "solutions": [
            "Проверить JWT_SECRET",
            "Проверить формат токена",
            "Проверить срок действия токена"
          ]
        },
        {
          "issue": "Rate limiting слишком строгий",
          "symptoms": ["429 Too Many Requests"],
          "solutions": [
            "Настроить лимиты в Redis",
            "Проверить настройки rate limiting",
            "Увеличить лимиты для определенных IP"
          ]
        },
        {
          "issue": "CORS ошибки",
          "symptoms": ["Access-Control-Allow-Origin"],
          "solutions": [
            "Проверить настройки CORS",
            "Добавить домен в allowed_origins",
            "Проверить заголовки запроса"
          ]
        }
      ],
      "debugging": {
        "enable_debug": "Установить debug: true в конфигурации",
        "log_level": "Установить LOG_LEVEL=debug",
        "profiling": "Использовать pprof для профилирования"
      }
    }
  }
} 