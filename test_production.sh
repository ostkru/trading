#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ API
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./test_production.sh

echo "üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–î–ê–ö–®–ï–ù–ê API"
echo "================================"
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –ë–∞–∑–æ–≤—ã–π URL –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
PROD_URL="https://api.portaldata.ru/v1/trading"
API_KEY="f428fbc16a97b9e2a55717bd34e97537ec34cb8c04a5f32eeb4e88c9ee998a53"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
make_request() {
    local method=$1
    local endpoint=$2
    local data=$3
    
    if [ -n "$data" ]; then
        curl -s -X "$method" \
             -H "Content-Type: application/json" \
             -H "Authorization: Bearer $API_KEY" \
             -d "$data" \
             "$PROD_URL$endpoint"
    else
        curl -s -X "$method" \
             -H "Authorization: Bearer $API_KEY" \
             "$PROD_URL$endpoint"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
check_status() {
    local test_name=$1
    local response=$2
    local expected_status=$3
    
    status=$(echo "$response" | jq -r '.status // .error // "unknown"')
    
    if [ "$status" = "$expected_status" ]; then
        echo -e "${GREEN}‚úÖ $test_name: OK${NC}"
        return 0
    else
        echo -e "${RED}‚ùå $test_name: FAILED (expected: $expected_status, got: $status)${NC}"
        echo "Response: $response"
        return 1
    fi
}

echo "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API..."
response=$(make_request "GET" "/offers/public")
check_status "API –¥–æ—Å—Ç—É–ø–µ–Ω" "$response" "200"

echo ""
echo "2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤..."
product_data='{
    "name": "–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞",
    "vendor_article": "PROD-TEST-001",
    "recommend_price": 150.50,
    "brand": "TestBrand",
    "category": "TestCategory",
    "description": "–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞"
}'

response=$(make_request "POST" "/products" "$product_data")
check_status "–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞" "$response" "201"

if [ $? -eq 0 ]; then
    product_id=$(echo "$response" | jq -r '.id')
    echo "   –°–æ–∑–¥–∞–Ω –ø—Ä–æ–¥—É–∫—Ç —Å ID: $product_id"
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
    response=$(make_request "GET" "/products/$product_id")
    check_status "–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞" "$response" "200"
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
    update_data='{"name": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç", "description": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ"}'
    response=$(make_request "PUT" "/products/$product_id" "$update_data")
    check_status "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞" "$response" "200"
fi

echo ""
echo "3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–æ–≤..."
warehouse_data='{
    "name": "–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫–ª–∞–¥ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞",
    "address": "–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥. 1",
    "latitude": 55.7558,
    "longitude": 37.6176,
    "working_hours": "09:00-18:00"
}'

response=$(make_request "POST" "/warehouses" "$warehouse_data")
check_status "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞" "$response" "201"

if [ $? -eq 0 ]; then
    warehouse_id=$(echo "$response" | jq -r '.id')
    echo "   –°–æ–∑–¥–∞–Ω —Å–∫–ª–∞–¥ —Å ID: $warehouse_id"
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞
    response=$(make_request "GET" "/warehouses/$warehouse_id")
    check_status "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞" "$response" "200"
fi

echo ""
echo "4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–æ–≤..."
offer_data='{
    "product_id": 1,
    "offer_type": "sell",
    "price_per_unit": 100.00,
    "units_per_lot": 10,
    "available_lots": 5,
    "is_public": true
}'

response=$(make_request "POST" "/offers" "$offer_data")
check_status "–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–∞" "$response" "201"

if [ $? -eq 0 ]; then
    offer_id=$(echo "$response" | jq -r '.id')
    echo "   –°–æ–∑–¥–∞–Ω –æ—Ñ—Ñ–µ—Ä —Å ID: $offer_id"
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–∞
    response=$(make_request "GET" "/offers/$offer_id")
    check_status "–ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–∞" "$response" "200"
fi

echo ""
echo "5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤..."
response=$(make_request "GET" "/offers/public")
check_status "–ü—É–±–ª–∏—á–Ω—ã–µ –æ—Ñ—Ñ–µ—Ä—ã" "$response" "200"

echo ""
echo "6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏..."
response=$(make_request "GET" "/statistics")
check_status "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" "$response" "200"

echo ""
echo "7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
doc_response=$(curl -s -o /dev/null -w "%{http_code}" "$PROD_URL/docs")
if [ "$doc_response" = "200" ]; then
    echo -e "${GREEN}‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (—Å—Ç–∞—Ç—É—Å: $doc_response)${NC}"
fi

echo ""
echo "8. –ü—Ä–æ–≤–µ—Ä–∫–∞ CORS..."
cors_response=$(curl -s -X OPTIONS \
    -H "Origin: https://example.com" \
    -H "Access-Control-Request-Method: GET" \
    -H "Access-Control-Request-Headers: Authorization" \
    "$PROD_URL/products" -o /dev/null -w "%{http_code}")

if [ "$cors_response" = "204" ] || [ "$cors_response" = "200" ]; then
    echo -e "${GREEN}‚úÖ CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  CORS –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (—Å—Ç–∞—Ç—É—Å: $cors_response)${NC}"
fi

echo ""
echo "9. –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL..."
ssl_check=$(curl -s -o /dev/null -w "%{http_code}" "$PROD_URL/products")
if [ "$ssl_check" != "000" ]; then
    echo -e "${GREEN}‚úÖ SSL —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
else
    echo -e "${RED}‚ùå SSL –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
fi

echo ""
echo "üéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û"
echo "=========================="
echo ""
echo "–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
echo "php comprehensive_api_test.php"
echo ""
echo "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É:"
echo "$PROD_URL/docs" 