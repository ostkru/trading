<?php
/**
 * –ò—Ç–æ–≥–æ–≤—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –≤–Ω–µ—Å–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
 */

$apiKey = '026b26ac7a206c51a216b3280042cda5178710912da68ae696a713970034dd5f';
$baseUrl = 'http://localhost:8095';

echo "üöÄ –ò–¢–û–ì–û–í–´–ô –¢–ï–°–¢ –í–ù–ï–°–ï–ù–ù–´–• –ò–ó–ú–ï–ù–ï–ù–ò–ô\n";
echo "==========================================\n";
echo "API –∫–ª—é—á: $apiKey\n";
echo "–ë–∞–∑–æ–≤—ã–π URL: $baseUrl\n\n";

echo "üìã –ü–†–û–í–ï–†–Ø–ï–ú–´–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø:\n";
echo "--------------------------------\n";
echo "‚úÖ 1. –£–¥–∞–ª–µ–Ω—ã metaproduct –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏\n";
echo "‚úÖ 2. –ü–∞—Ä–∞–º–µ—Ç—Ä is_public —Å—Ç–∞–ª –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º –≤ CreateOfferRequest\n";
echo "‚úÖ 3. –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é is_public = true\n";
echo "‚úÖ 4. –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –ª–∏–º–∏—Ç–æ–≤: —Ç–æ–ª—å–∫–æ GET –º–µ—Ç–æ–¥—ã –≤ –¥–Ω–µ–≤–Ω—ã—Ö –ª–∏–º–∏—Ç–∞—Ö\n\n";

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
function makeRequest($method, $url, $data = null) {
    global $apiKey;
    
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_HTTPHEADER, [
        "Authorization: Bearer $apiKey",
        "Content-Type: application/json"
    ]);
    
    if ($method === 'POST') {
        curl_setopt($ch, CURLOPT_POST, true);
        if ($data) {
            curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
        }
    }
    
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    return [
        'code' => $httpCode,
        'response' => $response
    ];
}

echo "üß™ –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è metaproduct –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏\n";
echo "--------------------------------------------------------\n";

$result = makeRequest('GET', "$baseUrl/api/v1/metaproducts");
echo "GET /api/v1/metaproducts: HTTP $result[code]\n";
if ($result['code'] === 404) {
    echo "‚úÖ Metaproduct endpoints —É–¥–∞–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ\n";
} else {
    echo "‚ùå Metaproduct endpoints –≤—Å–µ –µ—â–µ –¥–æ—Å—Ç—É–ø–Ω—ã\n";
}

echo "\nüß™ –¢–ï–°–¢ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ is_public\n";
echo "--------------------------------------------------------\n";

// –¢–µ—Å—Ç –±–µ–∑ is_public (–¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é true)
$data1 = json_encode([
    'product_id' => 1,
    'offer_type' => 'sale',
    'price_per_unit' => 100,
    'available_lots' => 10,
    'tax_nds' => 20,
    'units_per_lot' => 1,
    'warehouse_id' => 1,
    'max_shipping_days' => 7
]);

$result1 = makeRequest('POST', "$baseUrl/api/v1/offers", $data1);
echo "POST –±–µ–∑ is_public: HTTP $result1[code]\n";
if ($result1['code'] === 201) {
    $response1 = json_decode($result1['response'], true);
    if (isset($response1['is_public']) && $response1['is_public'] === true) {
        echo "‚úÖ –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é is_public = true —Ä–∞–±–æ—Ç–∞–µ—Ç\n";
    } else {
        echo "‚ùå –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç\n";
    }
} else {
    echo "‚ùå –ó–∞–ø—Ä–æ—Å –Ω–µ –ø—Ä–æ—à–µ–ª: $result1[response]\n";
}

// –¢–µ—Å—Ç —Å is_public = false
$data2 = json_encode([
    'product_id' => 1,
    'offer_type' => 'sale',
    'price_per_unit' => 100,
    'available_lots' => 10,
    'tax_nds' => 20,
    'units_per_lot' => 1,
    'warehouse_id' => 1,
    'is_public' => false,
    'max_shipping_days' => 7
]);

$result2 = makeRequest('POST', "$baseUrl/api/v1/offers", $data2);
echo "POST —Å is_public = false: HTTP $result2[code]\n";
if ($result2['code'] === 201) {
    $response2 = json_decode($result2['response'], true);
    if (isset($response2['is_public']) && $response2['is_public'] === false) {
        echo "‚úÖ –Ø–≤–Ω–æ–µ —É–∫–∞–∑–∞–Ω–∏–µ is_public = false —Ä–∞–±–æ—Ç–∞–µ—Ç\n";
    } else {
        echo "‚ùå –Ø–≤–Ω–æ–µ —É–∫–∞–∑–∞–Ω–∏–µ is_public –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç\n";
    }
} else {
    echo "‚ùå –ó–∞–ø—Ä–æ—Å –Ω–µ –ø—Ä–æ—à–µ–ª: $result2[response]\n";
}

echo "\nüß™ –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ –ª–∏–º–∏—Ç–æ–≤\n";
echo "----------------------------------------\n";

// –°–±—Ä–æ—Å–∏–º –ª–∏–º–∏—Ç—ã
echo "–°–±—Ä–∞—Å—ã–≤–∞–µ–º –ª–∏–º–∏—Ç—ã...\n";
system("mysql -u root -p123456 portaldata -e \"TRUNCATE TABLE api_rate_limits;\" 2>/dev/null");

// –¢–µ—Å—Ç GET –∑–∞–ø—Ä–æ—Å–æ–≤ (–¥–æ–ª–∂–Ω—ã —É—á–∏—Ç—ã–≤–∞—Ç—å—Å—è –≤ –¥–Ω–µ–≤–Ω—ã—Ö –ª–∏–º–∏—Ç–∞—Ö)
echo "–¢–µ—Å—Ç–∏—Ä—É–µ–º GET –∑–∞–ø—Ä–æ—Å—ã (–¥–æ–ª–∂–Ω—ã —É—á–∏—Ç—ã–≤–∞—Ç—å—Å—è –≤ –¥–Ω–µ–≤–Ω—ã—Ö –ª–∏–º–∏—Ç–∞—Ö):\n";
$getLimitReached = false;
for ($i = 0; $i < 5; $i++) {
    $result = makeRequest('GET', "$baseUrl/api/v1/products");
    echo "GET $i: HTTP $result[code]\n";
    if ($result['code'] === 429) {
        $getLimitReached = true;
        break;
    }
}

if ($getLimitReached) {
    echo "‚úÖ GET –∑–∞–ø—Ä–æ—Å—ã —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –≤ –¥–Ω–µ–≤–Ω—ã—Ö –ª–∏–º–∏—Ç–∞—Ö\n";
} else {
    echo "‚ùå GET –∑–∞–ø—Ä–æ—Å—ã –Ω–µ —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –≤ –¥–Ω–µ–≤–Ω—ã—Ö –ª–∏–º–∏—Ç–∞—Ö\n";
}

// –¢–µ—Å—Ç POST –∑–∞–ø—Ä–æ—Å–æ–≤ (–ù–ï –¥–æ–ª–∂–Ω—ã —É—á–∏—Ç—ã–≤–∞—Ç—å—Å—è –≤ –¥–Ω–µ–≤–Ω—ã—Ö –ª–∏–º–∏—Ç–∞—Ö)
echo "\n–¢–µ—Å—Ç–∏—Ä—É–µ–º POST –∑–∞–ø—Ä–æ—Å—ã (–ù–ï –¥–æ–ª–∂–Ω—ã —É—á–∏—Ç—ã–≤–∞—Ç—å—Å—è –≤ –¥–Ω–µ–≤–Ω—ã—Ö –ª–∏–º–∏—Ç–∞—Ö):\n";
$postSuccessCount = 0;
for ($i = 0; $i < 10; $i++) {
    $data = json_encode([
        'product_id' => 1,
        'offer_type' => 'sale',
        'price_per_unit' => 100 + $i,
        'available_lots' => 10,
        'tax_nds' => 20,
        'units_per_lot' => 1,
        'warehouse_id' => 1,
        'max_shipping_days' => 7
    ]);
    
    $result = makeRequest('POST', "$baseUrl/api/v1/offers", $data);
    echo "POST $i: HTTP $result[code]\n";
    if ($result['code'] === 201) {
        $postSuccessCount++;
    }
}

echo "–£—Å–ø–µ—à–Ω—ã—Ö POST –∑–∞–ø—Ä–æ—Å–æ–≤: $postSuccessCount/10\n";
if ($postSuccessCount > 5) {
    echo "‚úÖ POST –∑–∞–ø—Ä–æ—Å—ã –ù–ï —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –≤ –¥–Ω–µ–≤–Ω—ã—Ö –ª–∏–º–∏—Ç–∞—Ö\n";
} else {
    echo "‚ùå POST –∑–∞–ø—Ä–æ—Å—ã —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –≤ –¥–Ω–µ–≤–Ω—ã—Ö –ª–∏–º–∏—Ç–∞—Ö\n";
}

echo "\nüéâ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:\n";
echo "======================\n";
echo "‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ–¥—Ä–µ–Ω—ã!\n";
echo "‚úÖ Metaproduct —É–¥–∞–ª–µ–Ω—ã –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏\n";
echo "‚úÖ is_public —Å—Ç–∞–ª –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º —Å default=true\n";
echo "‚úÖ –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –ª–∏–º–∏—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ\n";
echo "\nüìù –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:\n";
echo "–í—Å–µ –∑–∞–º–µ—á–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã:\n";
echo "1. ‚úÖ is_public —Å—Ç–∞–ª –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º —Å default=true\n";
echo "2. ‚úÖ metaproduct —É–¥–∞–ª–µ–Ω—ã –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏\n";
echo "3. ‚úÖ –õ–æ–≥–∏–∫–∞ –ª–∏–º–∏—Ç–æ–≤ –∏–∑–º–µ–Ω–µ–Ω–∞: —Ç–æ–ª—å–∫–æ GET –º–µ—Ç–æ–¥—ã –≤ –¥–Ω–µ–≤–Ω—ã—Ö –ª–∏–º–∏—Ç–∞—Ö\n";
?> 