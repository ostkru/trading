<?php
/**
 * –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–æ–≤ API
 * API –∫–ª—é—á: 026b26ac7a206c51a216b3280042cda5178710912da68ae696a713970034dd5f
 */

$apiKey = '026b26ac7a206c51a216b3280042cda5178710912da68ae696a713970034dd5f';
$baseUrl = 'http://localhost:8095';

function makeRequest($method, $endpoint, $data = null, $headers = []) {
    global $baseUrl, $apiKey;
    
    $url = $baseUrl . $endpoint;
    
    $defaultHeaders = [
        'Authorization: Bearer ' . $apiKey,
        'Content-Type: application/json'
    ];
    
    $headers = array_merge($defaultHeaders, $headers);
    
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    curl_setopt($ch, CURLOPT_TIMEOUT, 30);
    
    if ($method === 'POST') {
        curl_setopt($ch, CURLOPT_POST, true);
        if ($data) {
            curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
        }
    } elseif ($method === 'PUT') {
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'PUT');
        if ($data) {
            curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
        }
    } elseif ($method === 'DELETE') {
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'DELETE');
    }
    
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    $error = curl_error($ch);
    curl_close($ch);
    
    return [
        'status' => $httpCode,
        'response' => $response,
        'error' => $error
    ];
}

function testRateLimits() {
    echo "üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –õ–ò–ú–ò–¢–û–í API\n";
    echo "==========================================\n\n";
    
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    echo "üìã 1. –ë–ê–ó–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ê\n";
    echo "--------------------------------\n";
    
    $result = makeRequest('GET', '/api/v1/products');
    echo "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: ";
    if ($result['status'] === 200) {
        echo "‚úÖ –ü–†–û–ô–î–ï–ù (HTTP {$result['status']})\n";
    } else {
        echo "‚ùå –ü–†–û–í–ê–õ–ï–ù (HTTP {$result['status']})\n";
        echo "–û—Ç–≤–µ—Ç: " . $result['response'] . "\n";
    }
    
    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω—É—Ç–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤ (–≤—Å–µ –º–µ—Ç–æ–¥—ã)
    echo "\n‚è±Ô∏è  2. –ü–†–û–í–ï–†–ö–ê –ú–ò–ù–£–¢–ù–´–• –õ–ò–ú–ò–¢–û–í\n";
    echo "--------------------------------\n";
    
    $minuteTests = [
        ['GET', '/api/v1/products', null, '–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤'],
        ['GET', '/api/v1/offers', null, '–ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–æ–≤'],
        ['GET', '/api/v1/orders', null, '–ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤'],
        ['GET', '/api/v1/warehouses', null, '–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∫–ª–∞–¥–æ–≤'],
        ['POST', '/api/v1/products', ['name' => 'Test Product', 'vendor_article' => 'TEST001', 'recommend_price' => 100, 'brand' => 'TestBrand', 'category' => 'TestCategory', 'description' => 'Test description'], '–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞'],
    ];
    
    foreach ($minuteTests as $test) {
        $result = makeRequest($test[0], $test[1], isset($test[2]) ? $test[2] : null);
        echo "{$test[3]}: ";
        if ($result['status'] === 200 || $result['status'] === 201) {
            echo "‚úÖ –ü–†–û–ô–î–ï–ù (HTTP {$result['status']})\n";
        } elseif ($result['status'] === 429) {
            echo "‚ö†Ô∏è  –õ–ò–ú–ò–¢ –ü–†–ï–í–´–®–ï–ù (HTTP {$result['status']})\n";
        } else {
            echo "‚ùå –ü–†–û–í–ê–õ–ï–ù (HTTP {$result['status']})\n";
        }
        
        // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        usleep(100000); // 0.1 —Å–µ–∫—É–Ω–¥—ã
    }
    
    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–Ω–µ–≤–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤ (–º–µ—Ç–æ–¥—ã all –∏ public)
    echo "\nüìÖ 3. –ü–†–û–í–ï–†–ö–ê –î–ù–ï–í–ù–´–• –õ–ò–ú–ò–¢–û–í\n";
    echo "--------------------------------\n";
    
    $dailyTests = [
        ['GET', '/api/v1/offers?filter=all', '–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤'],
        ['GET', '/api/v1/offers/public', '–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤'],
    ];
    
    foreach ($dailyTests as $test) {
        $result = makeRequest($test[0], $test[1]);
        echo "{$test[2]}: ";
        if ($result['status'] === 200) {
            echo "‚úÖ –ü–†–û–ô–î–ï–ù (HTTP {$result['status']})\n";
        } elseif ($result['status'] === 429) {
            echo "‚ö†Ô∏è  –î–ù–ï–í–ù–û–ô –õ–ò–ú–ò–¢ –ü–†–ï–í–´–®–ï–ù (HTTP {$result['status']})\n";
        } else {
            echo "‚ùå –ü–†–û–í–ê–õ–ï–ù (HTTP {$result['status']})\n";
        }
        
        usleep(100000);
    }
    
    // –¢–µ—Å—Ç 4: –°—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–æ–≤
    echo "\nüí• 4. –°–¢–†–ï–°–°-–¢–ï–°–¢ –õ–ò–ú–ò–¢–û–í\n";
    echo "--------------------------------\n";
    
    echo "–û—Ç–ø—Ä–∞–≤–∫–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–æ–≤...\n";
    
    $successCount = 0;
    $limitCount = 0;
    $errorCount = 0;
    
    for ($i = 1; $i <= 50; $i++) {
        $result = makeRequest('GET', '/api/v1/products');
        
        if ($result['status'] === 200) {
            $successCount++;
        } elseif ($result['status'] === 429) {
            $limitCount++;
        } else {
            $errorCount++;
        }
        
        if ($i % 10 === 0) {
            echo "–ó–∞–ø—Ä–æ—Å {$i}: –£—Å–ø–µ—à–Ω–æ: {$successCount}, –õ–∏–º–∏—Ç: {$limitCount}, –û—à–∏–±–∫–∏: {$errorCount}\n";
        }
        
        usleep(50000); // 0.05 —Å–µ–∫—É–Ω–¥—ã
    }
    
    echo "\nüìä –ò–¢–û–ì–ò –°–¢–†–ï–°–°-–¢–ï–°–¢–ê:\n";
    echo "–£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: {$successCount}\n";
    echo "–ó–∞–ø—Ä–æ—Å–æ–≤ —Å –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ–º –ª–∏–º–∏—Ç–∞: {$limitCount}\n";
    echo "–û—à–∏–±–æ–∫: {$errorCount}\n";
    
    // –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤
    echo "\nüîÑ 5. –ü–†–û–í–ï–†–ö–ê –†–ê–ó–ù–´–• –¢–ò–ü–û–í –ó–ê–ü–†–û–°–û–í\n";
    echo "--------------------------------\n";
    
    $differentTests = [
        ['GET', '/api/v1/products', null, 'GET –∑–∞–ø—Ä–æ—Å'],
        ['POST', '/api/v1/products', ['name' => 'Stress Test', 'vendor_article' => 'STRESS001', 'recommend_price' => 50, 'brand' => 'StressBrand', 'category' => 'StressCategory', 'description' => 'Stress test product'], 'POST –∑–∞–ø—Ä–æ—Å'],
        ['GET', '/api/v1/offers?filter=my', null, 'GET —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏'],
        ['GET', '/api/v1/offers?filter=others', null, 'GET —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ (–¥—Ä—É–≥–∏–µ)'],
    ];
    
    foreach ($differentTests as $test) {
        $result = makeRequest($test[0], $test[1], isset($test[2]) ? $test[2] : null);
        echo "{$test[3]}: ";
        if ($result['status'] === 200 || $result['status'] === 201) {
            echo "‚úÖ –ü–†–û–ô–î–ï–ù (HTTP {$result['status']})\n";
        } elseif ($result['status'] === 429) {
            echo "‚ö†Ô∏è  –õ–ò–ú–ò–¢ –ü–†–ï–í–´–®–ï–ù (HTTP {$result['status']})\n";
        } else {
            echo "‚ùå –ü–†–û–í–ê–õ–ï–ù (HTTP {$result['status']})\n";
        }
        
        usleep(100000);
    }
    
    echo "\n‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –õ–ò–ú–ò–¢–û–í –ó–ê–í–ï–†–®–ï–ù–û\n";
    echo "==========================================\n";
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testRateLimits();
?> 