{
  "openapi": "3.1.0",
  "info": {
    "title": "PortalData API",
    "version": "1.0.0",
    "description": "Полная документация по REST API для управления продуктами, офферами, заказами и складами.\nАвторизация по API-ключу обязательна для всех методов (заголовок Authorization).\n\n## Система статусов заказов\n- **pending** - Ожидает подтверждения (по умолчанию)\n- **confirmed** - Подтвержден продавцом\n- **processing** - В обработке\n- **shipped** - Отправлен\n- **delivered** - Доставлен\n- **cancelled** - Отменен\n- **rejected** - Отклонен\n\n## Типы офферов\n- **sale/sell** - Оффер на продажу\n- **buy/purchase** - Оффер на покупку\n\n## Роли в заказах\n- **initiator_user_id** - Покупатель (создатель заказа)\n- **counterparty_user_id** - Продавец (владелец оффера)"
  },
  "servers": [
    {
      "url": "https://api.portaldata.ru/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "in": "header",
        "name": "Authorization",
        "description": "Authorization: Bearer <api_key>"
      }
    },
    "parameters": {},
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "name": {"type": "string"},
          "vendor_article": {"type": "string"},
          "recommend_price": {"type": "number"},
          "brand": {"type": "string"},
          "category": {"type": "string"},
          "description": {"type": "string"},
          "created_at": {"type": "string", "format": "date-time"},
          "updated_at": {"type": "string", "format": "date-time"}
        }
      },
      "CreateProductRequest": {
        "type": "object",
        "required": ["name", "vendor_article", "recommend_price", "brand", "category"],
        "properties": {
          "name": {"type": "string"},
          "vendor_article": {"type": "string"},
          "recommend_price": {"type": "number"},
          "brand": {"type": "string"},
          "category": {"type": "string"},
          "description": {"type": "string"}
        },
        "description": "Поля created_at и updated_at выставляются сервером автоматически."
      },
      "UpdateProductRequest": {
        "type": "object",
        "properties": {
          "name": {"type": "string"},
          "vendor_article": {"type": "string"},
          "recommend_price": {"type": "number"},
          "brand": {"type": "string"},
          "category": {"type": "string"},
          "description": {"type": "string"}
        }
      },
      "Offer": {
        "type": "object",
        "properties": {
          "offer_id": {"type": "integer"},
          "user_id": {"type": "integer"},
          "is_public": {"type": "boolean"},
          "product_id": {"type": "integer"},
          "price_per_unit": {"type": "number"},
          "tax_nds": {"type": "integer"},
          "units_per_lot": {"type": "integer"},
          "available_lots": {"type": "integer"},
          "latitude": {"type": "number", "description": "Координаты автоматически подтягиваются из склада"},
          "longitude": {"type": "number", "description": "Координаты автоматически подтягиваются из склада"},
          "warehouse_id": {"type": "integer"},
          "offer_type": {
            "type": "string",
            "enum": ["sale", "sell", "buy", "purchase"],
            "description": "Тип оффера: sale/sell - продажа, buy/purchase - покупка"
          },
          "max_shipping_days": {"type": "integer", "default": 0, "description": "Максимальное количество дней доставки"},
          "created_at": {"type": "string", "format": "date-time"},
          "updated_at": {"type": "string", "format": "date-time"}
        }
      },
      "CreateOfferRequest": {
        "type": "object",
        "required": ["product_id", "offer_type", "price_per_unit", "available_lots", "tax_nds", "units_per_lot", "warehouse_id"],
        "properties": {
          "product_id": {"type": "integer"},
          "offer_type": {
            "type": "string",
            "enum": ["sale", "sell", "buy", "purchase"],
            "description": "Тип оффера: sale/sell - продажа, buy/purchase - покупка"
          },
          "price_per_unit": {"type": "number"},
          "available_lots": {"type": "integer"},
          "tax_nds": {"type": "integer"},
          "units_per_lot": {"type": "integer"},
          "warehouse_id": {"type": "integer", "description": "Координаты будут автоматически подтянуты из склада"},
          "is_public": {"type": "boolean", "description": "Публичный оффер или нет"},
          "max_shipping_days": {"type": "integer", "default": 0, "description": "Максимальное количество дней доставки"}
        },
        "description": "Поля created_at и updated_at выставляются сервером автоматически. Координаты автоматически заполняются из склада."
      },
      "UpdateOfferRequest": {
        "type": "object",
        "properties": {
          "price_per_unit": {"type": "number"},
          "available_lots": {"type": "integer"},
          "tax_nds": {"type": "integer"},
          "units_per_lot": {"type": "integer"},
          "is_public": {"type": "boolean"},
          "max_shipping_days": {"type": "integer"},
          "warehouse_id": {"type": "integer", "description": "При изменении склада координаты обновятся автоматически"}
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "order_id": {"type": "integer"},
          "total_amount": {"type": "number", "description": "Общая сумма заказа"},
          "is_multi": {
            "type": "object",
            "properties": {
              "Bool": {"type": "boolean"},
              "Valid": {"type": "boolean"}
            }
          },
          "offer_id": {"type": "integer"},
          "initiator_user_id": {"type": "integer", "description": "ID покупателя (создателя заказа)"},
          "counterparty_user_id": {"type": "integer", "description": "ID продавца (владельца оффера)"},
          "order_time": {"type": "string", "format": "date-time"},
          "price_per_unit": {"type": "number"},
          "units_per_lot": {"type": "integer"},
          "lot_count": {"type": "integer"},
          "notes": {"type": "string"},
          "order_type": {
            "type": "string",
            "enum": ["buy", "sell"],
            "description": "buy - покупка, sell - продажа"
          },
          "payment_method": {"type": "string"},
          "order_status": {
            "type": "string",
            "enum": ["pending", "confirmed", "processing", "shipped", "delivered", "cancelled", "rejected"],
            "description": "Статус заказа"
          },
          "status_reason": {"type": "string", "description": "Причина изменения статуса"},
          "status_changed_at": {"type": "string", "format": "date-time", "description": "Время изменения статуса"},
          "status_changed_by": {"type": "integer", "description": "ID пользователя, изменившего статус"},
          "shipping_address": {"type": "string"},
          "tracking_number": {"type": "string"},
          "max_shipping_days": {"type": "integer", "description": "Максимальное количество дней доставки"},
          "created_at": {"type": "string", "format": "date-time"},
          "updated_at": {"type": "string", "format": "date-time"}
        }
      },
      "CreateOrderRequest": {
        "type": "object",
        "required": ["offer_id", "quantity"],
        "properties": {
          "offer_id": {"type": "integer", "description": "ID оффера"},
          "quantity": {"type": "integer", "description": "Количество лотов"}
        }
      },
      "UpdateOrderStatusRequest": {
        "type": "object",
        "required": ["status"],
        "properties": {
          "status": {
            "type": "string",
            "enum": ["pending", "confirmed", "processing", "shipped", "delivered", "cancelled", "rejected"],
            "description": "Новый статус заказа"
          },
          "reason": {"type": "string", "description": "Причина изменения статуса"}
        }
      },
      "GetOrderResponse": {
        "type": "object",
        "properties": {
          "order": {"$ref": "#/components/schemas/Order"},
          "order_items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {"type": "integer"},
                "order_id": {"type": "integer"},
                "offer_id": {"type": "integer"},
                "qty": {"type": "integer"},
                "price_per_unit": {"type": "number"},
                "created_at": {"type": "string", "format": "date-time"},
                "status": {"type": "string"}
              }
            }
          }
        }
      },
      "Warehouse": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "user_id": {"type": "integer"},
          "name": {"type": "string", "description": "Название склада"},
          "updated_at": {"type": "string", "format": "date-time"},
          "created_at": {"type": "string", "format": "date-time"},
          "longitude": {"type": "number"},
          "latitude": {"type": "number"},
          "wb_id": {"type": "string"},
          "working_hours": {"type": "string"},
          "address": {"type": "string"}
        }
      },
      "CreateWarehouseRequest": {
        "type": "object",
        "required": ["name", "address", "latitude", "longitude"],
        "properties": {
          "name": {"type": "string", "description": "Название склада"},
          "address": {"type": "string"},
          "latitude": {"type": "number"},
          "longitude": {"type": "number"},
          "working_hours": {"type": "string"}
        },
        "description": "Поля created_at и updated_at выставляются сервером автоматически."
      },
      "UpdateWarehouseRequest": {
        "type": "object",
        "properties": {
          "name": {"type": "string", "description": "Название склада"},
          "address": {"type": "string"},
          "latitude": {"type": "number"},
          "longitude": {"type": "number"},
          "working_hours": {"type": "string"}
        }
      }
    }
  },
  "security": [
    {"ApiKeyAuth": []}
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Основной endpoint",
        "description": "Проверка доступности API и типа базы данных",
        "responses": {
          "200": {
            "description": "API доступен",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"},
                    "database": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "post": {
        "summary": "Создать продукт",
        "description": "Создаёт новый продукт. Все поля обязательны, кроме description.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/CreateProductRequest"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Продукт создан",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Product"}
              }
            }
          },
          "400": {"description": "Ошибка валидации"}
        }
      },
      "get": {
        "summary": "Список продуктов",
        "description": "Возвращает список продуктов с пагинацией. Можно фильтровать по производителю: my (мои), others (чужие), all (все).",
        "parameters": [
          {
            "in": "query",
            "name": "owner",
            "schema": {
              "type": "string",
              "enum": ["my", "others", "all"],
              "default": "all"
            },
            "description": "Фильтр по производителю: my — только мои, others — чужие, all — все."
          },
          {
            "in": "query",
            "name": "page",
            "schema": {"type": "integer", "default": 1},
            "description": "Номер страницы (начиная с 1)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {"type": "integer", "default": 10, "maximum": 100},
            "description": "Количество позиций на страницу (максимум 100)"
          }
        ],
        "responses": {
          "200": {
            "description": "Список продуктов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Product"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Получить продукт по ID",
        "description": "Возвращает продукт по его уникальному идентификатору.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Продукт найден",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Product"}
              }
            }
          },
          "404": {"description": "Не найден"}
        }
      },
      "put": {
        "summary": "Обновить продукт",
        "description": "Обновляет данные продукта по ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/UpdateProductRequest"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Продукт обновлён",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Product"}
              }
            }
          },
          "404": {"description": "Не найден"}
        }
      },
      "delete": {
        "summary": "Удалить продукт",
        "description": "Удаляет продукт по ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {"description": "Удалено"},
          "404": {"description": "Не найден"}
        }
      }
    },
    "/metaproduct": {
      "post": {
        "summary": "Создать metaproduct",
        "description": "Создаёт новый metaproduct (бывший продукт). Все поля обязательны, кроме description.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/CreateProductRequest"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Metaproduct создан",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Product"}
              }
            }
          },
          "400": {"description": "Ошибка валидации"}
        }
      },
      "get": {
        "summary": "Список metaproduct",
        "description": "Возвращает список metaproduct с пагинацией. Можно фильтровать по производителю: my (мои), others (чужие), all (все).",
        "parameters": [
          {
            "in": "query",
            "name": "owner",
            "schema": {
              "type": "string",
              "enum": ["my", "others", "all"],
              "default": "all"
            },
            "description": "Фильтр по производителю: my — только мои, others — чужие, all — все."
          },
          {
            "in": "query",
            "name": "page",
            "schema": {"type": "integer", "default": 1},
            "description": "Номер страницы (начиная с 1)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {"type": "integer", "default": 10, "maximum": 100},
            "description": "Количество позиций на страницу (максимум 100)"
          }
        ],
        "responses": {
          "200": {
            "description": "Список metaproduct",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Product"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metaproduct/{id}": {
      "get": {
        "summary": "Получить metaproduct по ID",
        "description": "Возвращает metaproduct по его уникальному идентификатору.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Metaproduct найден",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Product"}
              }
            }
          },
          "404": {"description": "Не найден"}
        }
      },
      "put": {
        "summary": "Обновить metaproduct",
        "description": "Обновляет данные metaproduct по ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/UpdateProductRequest"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Metaproduct обновлён",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Product"}
              }
            }
          },
          "404": {"description": "Не найден"}
        }
      },
      "delete": {
        "summary": "Удалить metaproduct",
        "description": "Удаляет metaproduct по ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {"description": "Удалено"},
          "404": {"description": "Не найден"}
        }
      }
    },
    "/offers": {
      "post": {
        "summary": "Создать оффер",
        "description": "Создаёт новый оффер. Координаты автоматически подтягиваются из склада.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/CreateOfferRequest"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Оффер создан",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Offer"}
              }
            }
          },
          "400": {"description": "Ошибка валидации"}
        }
      },
      "get": {
        "summary": "Список офферов пользователя",
        "description": "Возвращает список офферов, созданных текущим пользователем.",
        "responses": {
          "200": {
            "description": "Список офферов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "offers": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Offer"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/offers/public": {
      "get": {
        "summary": "Публичные офферы",
        "description": "Возвращает список публичных офферов.",
        "responses": {
          "200": {
            "description": "Список публичных офферов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "offers": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Offer"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/offers/{id}": {
      "put": {
        "summary": "Обновить оффер",
        "description": "Обновляет данные оффера по ID. При изменении склада координаты обновятся автоматически.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/UpdateOfferRequest"},
              "examples": {
                "Пример": {
                  "value": {
                    "price_per_unit": 900.00,
                    "available_lots": 8,
                    "tax_nds": 10,
                    "units_per_lot": 1,
                    "is_public": true,
                    "max_shipping_days": 5
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Обновлено",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Offer"}
              }
            }
          },
          "404": {"description": "Не найден"}
        }
      },
      "delete": {
        "summary": "Удалить оффер",
        "description": "Удаляет оффер по ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "204": {"description": "Удалено"},
          "409": {"description": "Есть связанные активные заказы"}
        }
      }
    },
    "/offers/wb_stock": {
      "get": {
        "summary": "Остатки WB по офферу",
        "description": "Возвращает остатки товара на складе WB по офферу.",
        "parameters": [
          {
            "in": "query",
            "name": "product_id",
            "required": true,
            "schema": {"type": "integer"}
          },
          {
            "in": "query",
            "name": "warehouse_id",
            "required": true,
            "schema": {"type": "integer"}
          },
          {
            "in": "query",
            "name": "supplier_id",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Остатки",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stock": {"type": "integer"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "post": {
        "summary": "Создать заказ",
        "description": "Создаёт новый заказ. Статус автоматически устанавливается в 'pending'.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/CreateOrderRequest"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Заказ создан",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Order"}
              }
            }
          },
          "400": {"description": "Ошибка валидации"},
          "404": {"description": "Оффер не найден"}
        }
      },
      "get": {
        "summary": "Список заказов пользователя",
        "description": "Возвращает список заказов, созданных текущим пользователем.",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {"type": "integer", "default": 1},
            "description": "Номер страницы (начиная с 1)"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {"type": "integer", "default": 20, "maximum": 100},
            "description": "Количество позиций на страницу (максимум 100)"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": ["pending", "confirmed", "processing", "shipped", "delivered", "cancelled", "rejected"]
            },
            "description": "Фильтр по статусу заказа"
          }
        ],
        "responses": {
          "200": {
            "description": "Список заказов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orders": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Order"}
                    },
                    "total": {"type": "integer"},
                    "page": {"type": "integer"},
                    "per_page": {"type": "integer"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "summary": "Получить заказ по ID",
        "description": "Возвращает заказ по его уникальному идентификатору.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Заказ",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/GetOrderResponse"}
              }
            }
          },
          "404": {"description": "Не найден"}
        }
      }
    },
    "/orders/{id}/status": {
      "put": {
        "summary": "Изменить статус заказа",
        "description": "Изменяет статус заказа. Доступно только участникам заказа с соответствующими правами.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/UpdateOrderStatusRequest"},
              "examples": {
                "Пример": {
                  "value": {
                    "status": "confirmed",
                    "reason": "Заказ подтвержден"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Статус изменен",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Order"}
              }
            }
          },
          "400": {"description": "Недопустимый статус"},
          "403": {"description": "Недостаточно прав для изменения статуса"},
          "404": {"description": "Заказ не найден"}
        }
      }
    },
    "/warehouses": {
      "post": {
        "summary": "Создать склад",
        "description": "Создаёт новый склад. Все поля обязательны.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/CreateWarehouseRequest"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Склад создан",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Warehouse"}
              }
            }
          },
          "400": {"description": "Ошибка валидации"}
        }
      },
      "get": {
        "summary": "Список складов пользователя",
        "description": "Возвращает список складов, созданных текущим пользователем.",
        "responses": {
          "200": {
            "description": "Список складов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "warehouses": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Warehouse"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/warehouses/{id}": {
      "put": {
        "summary": "Обновить склад",
        "description": "Обновляет данные склада по ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/UpdateWarehouseRequest"},
              "examples": {
                "Пример": {
                  "value": {
                    "name": "Основной склад",
                    "address": "456 Oak Ave",
                    "latitude": 55.7600,
                    "longitude": 37.6200,
                    "working_hours": "10:00-19:00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Обновлено",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Warehouse"}
              }
            }
          },
          "404": {"description": "Не найден"}
        }
      },
      "delete": {
        "summary": "Удалить склад",
        "description": "Удаляет склад по ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "204": {"description": "Удалено"},
          "404": {"description": "Не найден"}
        }
      }
    }
  }
} 