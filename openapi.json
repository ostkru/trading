{
  "openapi": "3.1.0",
  "info": {
    "title": "PortalData API",
    "version": "1.0.0",
    "description": "Полная документация по REST API для управления продуктами, офферами, заказами и складами.\nАвторизация по API-ключу обязательна для всех методов (заголовок Authorization).\n\n## Система статусов заказов\n- **pending** - Ожидает подтверждения (по умолчанию)\n- **confirmed** - Подтвержден продавцом\n- **processing** - В обработке\n- **shipped** - Отправлен\n- **delivered** - Доставлен\n- **cancelled** - Отменен\n- **rejected** - Отклонен\n\n## Типы офферов\n- **sale/sell** - Оффер на продажу\n- **buy/purchase** - Оффер на покупку\n\n## Роли в заказах\n- **initiator_user_id** - Покупатель (создатель заказа)\n- **counterparty_user_id** - Продавец (владелец оффера)"
  },
  "servers": [
    {
      "url": "https://api.portaldata.ru/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "in": "header",
        "name": "Authorization",
        "description": "Authorization: Bearer <api_key>"
      }
    },
    "parameters": {},
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "vendor_article": {
            "type": "string"
          },
          "recommend_price": {
            "type": "number"
          },
          "brand": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateProductRequest": {
        "type": "object",
        "required": [
          "name",
          "vendor_article",
          "recommend_price",
          "brand",
          "category"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Название продукта (обязательное поле)"
          },
          "vendor_article": {
            "type": "string",
            "description": "Артикул поставщика/производителя (обязательное поле)"
          },
          "recommend_price": {
            "type": "number",
            "description": "Рекомендуемая цена за единицу товара (обязательное поле)"
          },
          "brand": {
            "type": "string",
            "description": "Бренд/производитель продукта (обязательное поле)"
          },
          "category": {
            "type": "string",
            "description": "Категория товара (обязательное поле)"
          },
          "description": {
            "type": "string",
            "description": "Описание продукта включая характеристики (необязательное поле)"
          }
        },
        "description": "Поля created_at и updated_at выставляются сервером автоматически."
      },
      "UpdateProductRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Название продукта"
          },
          "vendor_article": {
            "type": "string",
            "description": "Артикул поставщика/производителя"
          },
          "recommend_price": {
            "type": "number",
            "description": "Рекомендуемая цена за единицу товара"
          },
          "brand": {
            "type": "string",
            "description": "Бренд/производитель продукта"
          },
          "category": {
            "type": "string",
            "description": "Категория товара"
          },
          "description": {
            "type": "string",
            "description": "Описание продукта включая характеристики (необязательное поле)"
          }
        }
      },
      "Offer": {
        "type": "object",
        "properties": {
          "offer_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "is_public": {
            "type": "boolean",
            "description": "Публичный оффер или нет"
          },
          "product_id": {
            "type": "integer"
          },
          "price_per_unit": {
            "type": "number"
          },
          "units_per_lot": {
            "type": "integer"
          },
          "tax_nds": {
            "type": "integer"
          },
          "available_lots": {
            "type": "integer"
          },
          "latitude": {
            "type": "number",
            "description": "Координаты автоматически подтягиваются из склада"
          },
          "longitude": {
            "type": "number",
            "description": "Координаты автоматически подтягиваются из склада"
          },
          "warehouse_id": {
            "type": "integer"
          },
          "offer_type": {
            "type": "string",
            "enum": [
              "sale",
              "buy"
            ],
            "description": "Тип оффера: sale - продажа, buy - покупка"
          },
          "max_shipping_days": {
            "type": "integer",
            "default": 0,
            "description": "Максимальное количество дней доставки"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateOfferRequest": {
        "type": "object",
        "required": [
          "product_id",
          "offer_type",
          "price_per_unit",
          "units_per_lot",
          "available_lots",
          "tax_nds",
          "warehouse_id"
        ],
        "properties": {
          "product_id": {
            "type": "integer",
            "description": "ID продукта для создания оффера (обязательное поле)"
          },
          "offer_type": {
            "type": "string",
            "enum": [
              "sale",
              "buy"
            ],
            "description": "Тип оффера: sale - продажа, buy - покупка (обязательное поле)"
          },
          "price_per_unit": {
            "type": "number",
            "description": "Цена за единицу товара (обязательное поле)"
          },
          "units_per_lot": {
            "type": "integer",
            "description": "Количество единиц товара в одном лоте (обязательное поле)"
          },
          "available_lots": {
            "type": "integer",
            "description": "Количество доступных лотов (обязательное поле)"
          },
          "tax_nds": {
            "type": "integer",
            "description": "НДС в процентах (обязательное поле)"
          },
          "warehouse_id": {
            "type": "integer",
            "description": "ID склада, координаты будут автоматически подтянуты из склада"
          },
          "is_public": {
            "type": "boolean",
            "default": true,
            "description": "Публичный оффер или нет. По умолчанию true."
          },
          "max_shipping_days": {
            "type": "integer",
            "default": 0,
            "description": "Максимальное количество дней доставки"
          }
        },
        "description": "Поля created_at и updated_at выставляются сервером автоматически. Координаты автоматически заполняются из склада."
      },
      "UpdateOfferRequest": {
        "type": "object",
        "properties": {
          "price_per_unit": {
            "type": "number",
            "description": "Цена за единицу товара"
          },
          "units_per_lot": {
            "type": "integer",
            "description": "Количество единиц товара в одном лоте"
          },
          "available_lots": {
            "type": "integer",
            "description": "Количество доступных лотов"
          },
          "tax_nds": {
            "type": "integer",
            "description": "НДС в процентах"
          },
          "is_public": {
            "type": "boolean",
            "description": "Новый статус публичности оффера"
          },
          "max_shipping_days": {
            "type": "integer",
            "description": "Максимальное количество дней доставки"
          },
          "warehouse_id": {
            "type": "integer",
            "description": "При изменении склада координаты обновятся автоматически"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "integer"
          },
          "total_amount": {
            "type": "number",
            "description": "Общая сумма заказа"
          },
          "is_multi": {
            "type": "object",
            "properties": {
              "Bool": {
                "type": "boolean"
              },
              "Valid": {
                "type": "boolean"
              }
            }
          },
          "offer_id": {
            "type": "integer"
          },
          "initiator_user_id": {
            "type": "integer",
            "description": "ID покупателя (создателя заказа)"
          },
          "counterparty_user_id": {
            "type": "integer",
            "description": "ID продавца (владельца оффера)"
          },
          "order_time": {
            "type": "string",
            "format": "date-time"
          },
          "price_per_unit": {
            "type": "number"
          },
          "units_per_lot": {
            "type": "integer"
          },
          "lot_count": {
            "type": "integer"
          },
          "notes": {
            "type": "string"
          },
          "order_type": {
            "type": "string",
            "enum": [
              "sale",
              "buy"
            ],
            "description": "sale - продажа, buy - покупка"
          },
          "payment_method": {
            "type": "string"
          },
          "order_status": {
            "type": "string",
            "enum": [
              "pending",
              "confirmed",
              "processing",
              "shipped",
              "delivered",
              "cancelled",
              "rejected"
            ],
            "description": "Статус заказа"
          },
          "status_reason": {
            "type": "string",
            "description": "Причина изменения статуса"
          },
          "status_changed_at": {
            "type": "string",
            "format": "date-time",
            "description": "Время изменения статуса"
          },
          "status_changed_by": {
            "type": "integer",
            "description": "ID пользователя, изменившего статус"
          },
          "shipping_address": {
            "type": "string"
          },
          "tracking_number": {
            "type": "string"
          },
          "max_shipping_days": {
            "type": "integer",
            "description": "Максимальное количество дней доставки"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateOrderRequest": {
        "type": "object",
        "required": [
          "offer_id",
          "quantity"
        ],
        "properties": {
          "offer_id": {
            "type": "integer",
            "description": "ID оффера"
          },
          "quantity": {
            "type": "integer",
            "description": "Количество лотов"
          }
        }
      },
      "UpdateOrderStatusRequest": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "confirmed",
              "processing",
              "shipped",
              "delivered",
              "cancelled",
              "rejected"
            ],
            "description": "Новый статус заказа"
          },
          "reason": {
            "type": "string",
            "description": "Причина изменения статуса"
          }
        }
      },
      "GetOrderResponse": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "order_items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "order_id": {
                  "type": "integer"
                },
                "offer_id": {
                  "type": "integer"
                },
                "qty": {
                  "type": "integer"
                },
                "price_per_unit": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Warehouse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "name": {
            "type": "string",
            "description": "Название склада"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "longitude": {
            "type": "number"
          },
          "latitude": {
            "type": "number"
          },
          "wb_id": {
            "type": "string"
          },
          "working_hours": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        }
      },
      "CreateWarehouseRequest": {
        "type": "object",
        "required": [
          "name",
          "address",
          "latitude",
          "longitude"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Название склада"
          },
          "address": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "working_hours": {
            "type": "string"
          }
        },
        "description": "Поля created_at и updated_at выставляются сервером автоматически."
      },
      "UpdateWarehouseRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Название склада"
          },
          "address": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "working_hours": {
            "type": "string"
          }
        }
      },
      "ProductUpdateResponse": {
        "type": "object",
        "description": "Ответ с обновленными полями продукта",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID обновленного продукта"
          },
          "updated_fields": {
            "type": "object",
            "description": "Обновленные поля продукта"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Время последнего обновления"
          }
        }
      },
      "OfferUpdateResponse": {
        "type": "object",
        "description": "Ответ с обновленными полями оффера",
        "properties": {
          "offer_id": {
            "type": "integer",
            "description": "ID обновленного оффера"
          },
          "updated_fields": {
            "type": "object",
            "description": "Обновленные поля оффера"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Время последнего обновления"
          }
        }
      },
      "OrderStatusUpdateResponse": {
        "type": "object",
        "description": "Ответ с обновленным статусом заказа",
        "properties": {
          "order_id": {
            "type": "integer",
            "description": "ID заказа"
          },
          "order_status": {
            "type": "string",
            "enum": [
              "pending",
              "confirmed",
              "processing",
              "shipped",
              "delivered",
              "cancelled",
              "rejected"
            ],
            "description": "Новый статус заказа"
          },
          "status_reason": {
            "type": "string",
            "description": "Причина изменения статуса"
          },
          "status_changed_at": {
            "type": "string",
            "format": "date-time",
            "description": "Время изменения статуса"
          },
          "status_changed_by": {
            "type": "integer",
            "description": "ID пользователя, изменившего статус"
          }
        }
      },
      "WarehouseUpdateResponse": {
        "type": "object",
        "description": "Ответ с обновленными полями склада",
        "properties": {
          "warehouse_id": {
            "type": "integer",
            "description": "ID обновленного склада"
          },
          "updated_fields": {
            "type": "object",
            "description": "Обновленные поля склада"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Время последнего обновления"
          }
        }
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Основной endpoint",
        "description": "Проверка доступности API и типа базы данных",
        "responses": {
          "200": {
            "description": "API доступен",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "database": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "post": {
        "summary": "Создать продукт",
        "description": "Создаёт новый продукт. Это метаданные, на основе которых строится вся схема ассортимента на проекте. Наивысший приоритет уделяется данным от производителя. Все поля обязательны, кроме description.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Продукт создан",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации"
          }
        }
      },
      "get": {
        "summary": "Список продуктов",
        "description": "Возвращает список продуктов с пагинацией. Можно фильтровать по производителю: my (мои), others (чужие), all (все).",
        "parameters": [
          {
            "in": "query",
            "name": "owner",
            "schema": {
              "type": "string",
              "enum": [
                "my",
                "others",
                "all"
              ],
              "default": "all"
            },
            "description": "Фильтр по владельцу продуктов: 'my' — только мои продукты, 'others' — только чужие продукты, 'all' — все продукты (по умолчанию)"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "Номер страницы для пагинации (начиная с 1, по умолчанию 1)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "description": "Количество продуктов на страницу (от 1 до 100, по умолчанию 10)"
          }
        ],
        "responses": {
          "200": {
            "description": "Список продуктов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Получить продукт по ID",
        "description": "Возвращает продукт по его уникальному идентификатору.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Уникальный идентификатор продукта (целое число больше 0)"
          }
        ],
        "responses": {
          "200": {
            "description": "Продукт найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Не найден"
          }
        }
      },
      "put": {
        "summary": "Обновить продукт",
        "description": "Обновляет данные продукта по ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Уникальный идентификатор продукта для обновления (целое число больше 0)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Продукт обновлён",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductUpdateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Не найден"
          }
        }
      },
      "delete": {
        "summary": "Удалить продукт",
        "description": "Удаляет продукт по ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Уникальный идентификатор продукта для удаления (целое число больше 0)"
          }
        ],
        "responses": {
          "200": {
            "description": "Удалено"
          },
          "404": {
            "description": "Не найден"
          }
        }
      }
    },


    "/offers": {
      "post": {
        "summary": "Создать оффер",
        "description": "Создаёт новый оффер. Координаты автоматически подтягиваются из склада.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOfferRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Оффер создан",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Offer"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации"
          }
        }
      },
      "get": {
        "summary": "Список офферов пользователя",
        "description": "Возвращает список офферов, созданных текущим пользователем.",
        "responses": {
          "200": {
            "description": "Список офферов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "offers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Offer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/offers/public": {
      "get": {
        "summary": "Публичные офферы",
        "description": "Возвращает список публичных офферов.",
        "responses": {
          "200": {
            "description": "Список публичных офферов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "offers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Offer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/offers/{id}": {
      "put": {
        "summary": "Обновить оффер",
        "description": "Обновляет данные оффера по ID. При изменении склада координаты обновятся автоматически.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Уникальный идентификатор оффера для обновления (целое число больше 0)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOfferRequest"
              },
              "examples": {
                "Пример": {
                  "value": {
                    "price_per_unit": 900,
                    "available_lots": 8,
                    "tax_nds": 10,
                    "units_per_lot": 1,
                    "is_public": true,
                    "max_shipping_days": 5
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Обновлено",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfferUpdateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Не найден"
          }
        }
      },
      "delete": {
        "summary": "Удалить оффер",
        "description": "Удаляет оффер по ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Уникальный идентификатор оффера для удаления (целое число больше 0)"
          }
        ],
        "responses": {
          "204": {
            "description": "Удалено"
          },
          "409": {
            "description": "Есть связанные активные заказы"
          }
        }
      }
    },
    "/offers/wb_stock": {
      "get": {
        "summary": "Остатки WB по офферу",
        "description": "Возвращает остатки товара на складе WB по офферу.",
        "parameters": [
          {
            "in": "query",
            "name": "product_id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Идентификатор продукта для проверки остатков (целое число больше 0)"
          },
          {
            "in": "query",
            "name": "warehouse_id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Идентификатор склада WB для проверки остатков (целое число больше 0)"
          },
          {
            "in": "query",
            "name": "supplier_id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Идентификатор поставщика/поставки для проверки остатков (целое число больше 0)"
          }
        ],
        "responses": {
          "200": {
            "description": "Остатки",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stock": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "post": {
        "summary": "Создать заказ",
        "description": "Создаёт новый заказ. Статус автоматически устанавливается в 'pending'.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Заказ создан",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации"
          },
          "404": {
            "description": "Оффер не найден"
          }
        }
      },
      "get": {
        "summary": "Список заказов пользователя",
        "description": "Возвращает список заказов, созданных текущим пользователем.",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "Номер страницы для пагинации списка заказов (начиная с 1, по умолчанию 1)"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 1,
              "maximum": 100
            },
            "description": "Количество заказов на страницу (от 1 до 100, по умолчанию 20)"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "confirmed",
                "processing",
                "shipped",
                "delivered",
                "cancelled",
                "rejected"
              ]
            },
            "description": "Фильтр по статусу заказа: 'pending' — ожидает подтверждения, 'confirmed' — подтвержден продавцом, 'processing' — в обработке, 'shipped' — отправлен, 'delivered' — доставлен, 'cancelled' — отменен, 'rejected' — отклонен"
          }
        ],
        "responses": {
          "200": {
            "description": "Список заказов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orders": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Order"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "per_page": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "summary": "Получить заказ по ID",
        "description": "Возвращает заказ по его уникальному идентификатору.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Уникальный идентификатор заказа (целое число больше 0)"
          }
        ],
        "responses": {
          "200": {
            "description": "Заказ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderResponse"
                }
              }
            }
          },
          "404": {
            "description": "Не найден"
          }
        }
      }
    },
    "/orders/{id}/status": {
      "put": {
        "summary": "Изменить статус заказа",
        "description": "Изменяет статус заказа. Доступно только участникам заказа с соответствующими правами.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Уникальный идентификатор заказа для изменения статуса (целое число больше 0)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderStatusRequest"
              },
              "examples": {
                "Пример": {
                  "value": {
                    "status": "confirmed",
                    "reason": "Заказ подтвержден"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Статус изменен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderStatusUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Недопустимый статус"
          },
          "403": {
            "description": "Недостаточно прав для изменения статуса"
          },
          "404": {
            "description": "Заказ не найден"
          }
        }
      }
    },
    "/warehouses": {
      "post": {
        "summary": "Создать склад",
        "description": "Создаёт новый склад. Все поля обязательны.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWarehouseRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Склад создан",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации"
          }
        }
      },
      "get": {
        "summary": "Список складов пользователя",
        "description": "Возвращает список складов, созданных текущим пользователем.",
        "responses": {
          "200": {
            "description": "Список складов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "warehouses": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Warehouse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/warehouses/{id}": {
      "put": {
        "summary": "Обновить склад",
        "description": "Обновляет данные склада по ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Уникальный идентификатор склада для обновления (целое число больше 0)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWarehouseRequest"
              },
              "examples": {
                "Пример": {
                  "value": {
                    "name": "Основной склад",
                    "address": "456 Oak Ave",
                    "latitude": 55.76,
                    "longitude": 37.62,
                    "working_hours": "10:00-19:00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Обновлено",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WarehouseUpdateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Не найден"
          }
        }
      },
      "delete": {
        "summary": "Удалить склад",
        "description": "Удаляет склад по ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Уникальный идентификатор склада для удаления (целое число больше 0)"
          }
        ],
        "responses": {
          "204": {
            "description": "Удалено"
          },
          "404": {
            "description": "Не найден"
          }
        }
      }
    },
    "/api/v1/offers": {
      "get": {
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Фильтр офферов: 'my' — только мои офферы, 'others' — только чужие офферы, 'all' — все офферы (по умолчанию 'my')",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "my",
                "others",
                "all"
              ],
              "default": "my"
            }
          }
        ]
      }
    }
  }
}